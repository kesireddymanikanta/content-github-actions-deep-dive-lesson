name: Deploy Lambda Function
on: 
  workflow_dispatch:
permissions: write-all
env:
  package: mani  

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: pip install flake8
      - name: Lint with flake8
        run: |
            cd function
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install libraries
      run: |
        cd function
        python -m pip install --upgrade pip
        if [-f requirements.txt]; then pip install -r requirements.txt -t .; fi

    - name: Zip Bundle
      run: |
        cd function
        zip -r ../${{ github.sha }}.zip .
    - name: Archieve artifact
      uses: actions/upload-artifact@v2
      with:
        name: zipped-bundle
        path: ${{ github.sha }}.zip
  publish:  
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with: 
          tag_name: ${{ github.run_number }}
          release_name: ManiRelease ${{ github.run_number }}
          body: New release for $my first GHA. Release notes can be found in the docs.
          draft: false
          prerelease: false
      - name: Download artifact
        uses: actions/download-artifact@v2
        with: 
          name: zipped-bundle
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env : 
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.outputs.create_release.upload_url }}
          asset_path: ./${{ github.sha }}.zip
          asset_name: source_code_with_libraries.zip
          asset_content_type: application/zip
      

    
